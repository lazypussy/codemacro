<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: tips | loop in codes]]></title>
  <link href="http://codemacro.com/tags/tips/atom.xml" rel="self"/>
  <link href="http://codemacro.com/"/>
  <updated>2012-07-20T17:29:39+08:00</updated>
  <id>http://codemacro.com/</id>
  <author>
    <name><![CDATA[Kevin Lynx]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails中获取客户端时区]]></title>
    <link href="http://codemacro.com/2012/07/20/get-client-timezone-in-rails/"/>
    <updated>2012-07-20T16:42:00+08:00</updated>
    <id>http://codemacro.com/2012/07/20/get-client-timezone-in-rails</id>
    <content type="html"><![CDATA[<p>开发网站功能时，有时候需要获取客户端（浏览器）所在的时区，然后根据不同的时区做一些不同的逻辑功能。这里提供一种方法，其思路为客户端通过js获取时区，然后发送给服务器，服务器存储时区到session中。</p>

<p><div class="highlight"><pre><code class="javascript"><span class="kd">function</span> <span class="nx">submit_timezone</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">$</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;offset_min&#39;</span> <span class="o">:</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span> <span class="o">*</span> <span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">()).</span><span class="nx">getTimezoneOffset</span><span class="p">())});</span>
<span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>

<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>

<span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">submit_timezone</span><span class="p">(</span><span class="s1">&#39;&amp;lt;%= sys_timezone_path %&amp;gt;&#39;</span><span class="p">);</span>
<span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>

<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">});</span>
</code></pre>
</div>
</p>

<!-- more -->


<p>sys_timezone_path是一个特地用来处理时区的route。其实主要需要的是offset_min这个请求参数，你可以把这个参数附加到其他请求里。</p>

<p>然后根据offset_min获取到时区名：</p>

<p><div class="highlight"><pre><code class="ruby"><span class="k">def</span> <span class="nf">timezone</span>
  <span class="n">offset_sec</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:offset_min</span><span class="o">].</span><span class="n">to_i</span> <span class="o">*</span> <span class="mi">60</span>
  <span class="n">zone</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">TimeZone</span><span class="o">[</span><span class="n">offset_sec</span><span class="o">]</span>
  <span class="n">zone</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">TimeZone</span><span class="o">[</span><span class="s2">&quot;UTC&quot;</span><span class="o">]</span> <span class="k">unless</span> <span class="n">zone</span>
  <span class="n">session</span><span class="o">[</span><span class="ss">:zone_name</span><span class="o">]</span> <span class="o">=</span> <span class="n">zone</span><span class="o">.</span><span class="n">name</span> <span class="k">if</span> <span class="n">zone</span>
  <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|&lt;</span><span class="sr">/p&gt;</span>

<span class="sr">&lt;pre&gt;&lt;code&gt;format.js</span>
<span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>

<span class="sr">&lt;p&gt;  end</span>
<span class="sr">end</span>
</code></pre>
</div>
</p>

<p>以上，获取到时区名后存储到session[:zone_name]里。在之后处理这个客户端的请求时，就可以通过这个时区名取得对应的时区，例如：</p>

<p><div class="highlight"><pre><code class="ruby"><span class="n">zone_name</span> <span class="o">=</span> <span class="n">session</span><span class="o">[</span><span class="ss">:zone_name</span><span class="o">]</span>
<span class="n">zone</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">TimeZone</span><span class="o">[</span><span class="n">zone_name</span><span class="o">]</span> <span class="k">if</span> <span class="n">zone_name</span>
</code></pre>
</div>
</p>

<p>但经过我实际测试，部署在heroku上的应用偶尔会发现session[:zone_name]取出来是nil，尽管我确认了timezone函数是被调用过的。这难道跟session的超时有关？后来我只好将timezone name写到客户端页面中，然后在其他请求中再把这个时区名发回来。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTML中实现弹出窗口]]></title>
    <link href="http://codemacro.com/2012/07/19/popup-window-in-html/"/>
    <updated>2012-07-19T14:56:00+08:00</updated>
    <id>http://codemacro.com/2012/07/19/popup-window-in-html</id>
    <content type="html"><![CDATA[<p><img class="right" src="/assets/res/popup-window-tip.png"></p>

<p>做网页时弹出一个窗口显示一些内容是一种很常见的交互方式，如图中用户点击“个人资料“时并不是转到一个新页面，而是在当前页面弹出修改密码的窗口。弹出窗口的实现方式有很多，这里罗列一种。</p>

<p>弹出窗口的内容是作为一个单独的div存在的，这个div可以在页面刚开始载入时不填入内容，而在以后通过json或者直接返回js来填入。其次，弹出窗口的显示位置一般是绝对位置，一方面是不影响页面布局，另一方面也希望其作为一个顶层窗口来呈现，所以需要指定其position css。</p>

<!-- more -->


<p><div class="highlight"><pre><code class="html"><span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&#39;userprofile&#39;</span> <span class="na">class=</span><span class="s">&#39;popup&#39;</span> <span class="na">style=</span><span class="s">&quot;display:none;&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>


<span class="nt">&lt;p&gt;</span>
</code></pre>
</div>
</p>

<p><div class="highlight"><pre><code class="css"><span class="nc">.popup</span> <span class="p">{</span>
  <span class="k">position</span><span class="o">:</span> <span class="k">absolute</span><span class="p">;</span>
  <span class="k">z-index</span><span class="o">:</span> <span class="m">200</span><span class="p">;</span>
  <span class="k">left</span><span class="o">:</span> <span class="m">0px</span><span class="p">;</span>
  <span class="k">top</span><span class="o">:</span> <span class="m">0px</span><span class="p">;</span>
  <span class="k">border</span><span class="o">:</span> <span class="m">1px</span> <span class="k">solid</span> <span class="m">#666</span><span class="p">;</span>
  <span class="k">background</span><span class="o">:</span> <span class="nb">white</span><span class="p">;</span>
  <span class="k">padding</span><span class="o">:</span> <span class="m">8px</span> <span class="m">5px</span> <span class="m">5px</span><span class="p">;</span>
  <span class="k">margin</span><span class="o">:</span> <span class="m">10px</span> <span class="m">5px</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
</div>
</p>

<p>我这里div里的内容是后面填入的，预先填入也可以。当要显示时，就通过js将这个div显示即可。为此我封装了几个js函数。</p>

<p><div class="highlight"><pre><code class="javascript"><span class="kd">function</span> <span class="nx">show_popupex</span><span class="p">(</span><span class="nx">pannel</span><span class="p">,</span> <span class="nx">target</span><span class="p">,</span> <span class="nx">manual</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>

<span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="kd">var</span> <span class="nx">pos</span> <span class="o">=</span> <span class="nx">target</span><span class="p">.</span><span class="nx">position</span><span class="p">();</span>
<span class="kd">var</span> <span class="nx">height</span> <span class="o">=</span> <span class="nx">target</span><span class="p">.</span><span class="nx">outerHeight</span><span class="p">();</span>
<span class="nx">pannel</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;left&#39;</span><span class="p">,</span> <span class="nx">pos</span><span class="p">.</span><span class="nx">left</span> <span class="o">+</span> <span class="s1">&#39;px&#39;</span><span class="p">);</span>
<span class="nx">pannel</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;top&#39;</span><span class="p">,</span> <span class="nx">pos</span><span class="p">.</span><span class="nx">top</span> <span class="o">+</span> <span class="nx">height</span> <span class="o">+</span> <span class="s1">&#39;px&#39;</span><span class="p">);</span>
<span class="nx">pannel</span><span class="p">.</span><span class="nx">show</span><span class="p">();</span>
<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">manual</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">pannel</span><span class="p">.</span><span class="nx">mouseleave</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span> <span class="nx">pannel</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span> <span class="p">});</span>
<span class="p">}</span>
<span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>

<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>

<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kd">function</span> <span class="nx">show_popup</span><span class="p">(</span><span class="nx">pannel_id</span><span class="p">,</span> <span class="nx">target_id</span><span class="p">,</span> <span class="nx">manual</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>

<span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="kd">var</span> <span class="nx">target</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nx">target_id</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">pannel</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nx">pannel_id</span><span class="p">);</span>
<span class="nx">show_popupex</span><span class="p">(</span><span class="nx">pannel</span><span class="p">,</span> <span class="nx">target</span><span class="p">,</span> <span class="nx">manual</span><span class="p">);</span>
<span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>

<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>

<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kd">function</span> <span class="nx">hide_popup</span><span class="p">(</span><span class="nx">pannel_id</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>

<span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">$</span><span class="p">(</span><span class="nx">pannel_id</span><span class="p">).</span><span class="nx">hide</span><span class="p">();</span>
<span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>

<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span>
</code></pre>
</div>
</p>

<p>show_popup函数主要就是将目标元素的位置做调整，然后显示。通常情况下我只需传入元素的id，manual属性指定弹出窗口是否手动关闭。对于tooltip的实现，则需要让其自动关闭。针对以上例子，使用方式为：</p>

<p><div class="highlight"><pre><code class="js"><span class="nx">show_popup</span><span class="p">(</span><span class="s1">&#39;#userprofile&#39;</span><span class="p">,</span> <span class="s1">&#39;#profile-link&#39;</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
</code></pre>
</div>
</p>

<p>其中profile-link就是那个“个人资料“链接。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为octopress添加tag cloud]]></title>
    <link href="http://codemacro.com/2012/07/18/add-tag-to-octopress/"/>
    <updated>2012-07-18T16:37:00+08:00</updated>
    <id>http://codemacro.com/2012/07/18/add-tag-to-octopress</id>
    <content type="html"><![CDATA[<p>同添加category list一样，网络上有很多方法，这里列举一种。首先到<a href="https://github.com/robbyedwards/octopress-tag-pages">https://github.com/robbyedwards/octopress-tag-pages</a>和<a href="https://github.com/robbyedwards/octopress-tag-cloud">https://github.com/robbyedwards/octopress-tag-cloud</a>clone这两个项目的代码。这两个项目分别用于产生tag page和tag cloud。 针对这两个插件，需要手工复制一些文件到你的octopress目录。</p>

<p><strong>octopress-tag-pages</strong></p>

<p>复制tag_generator.rb到/plugins目录；复制tag_index.html到/source/_layouts目录。<strong>需要注意的是，还需要复制tag_feed.xml到/source/_includes/custom/目录。</strong>这个官方文档里没提到，在我机器上rake generate时报错。其他文件就不需要复制了，都是些例子。</p>

<!-- more -->


<p><strong>octopress-tag-cloud</strong></p>

<p>仅复制tag_cloud.rb到/plugins目录即可。但这仅仅只是为liquid添加了一个tag（非本文所提tag）。如果要在侧边导航里添加一个tag cloud，我们还需要手动添加aside。</p>

<p>复制以下代码到/source/_includes/custom/asides/tags.html。</p>

<p><div class="highlight"><pre><code class="ruby"><span class="o">&lt;</span><span class="n">section</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Tags</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
<span class="sr">  &lt;ul class=&quot;tag-cloud&quot;&gt;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">{</span><span class="o">%</span> <span class="n">tag_cloud</span> <span class="n">font</span><span class="o">-</span><span class="n">size</span><span class="p">:</span> <span class="mi">90</span><span class="o">-</span><span class="mi">210</span><span class="sx">%, limit: 10,</span> <span class="n">style</span><span class="p">:</span> <span class="n">para</span> <span class="o">%</span><span class="p">}</span>
<span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="sr">/ul&gt;</span>
<span class="sr">&lt;/se</span><span class="n">ction</span><span class="o">&gt;</span>
</code></pre>
</div>
</p>

<p>tag_cloud的参数中，style :para指定不使用li来分割，limit限定10个tag，font-size指定tag的大小范围，具体参数参看官方文档。</p>

<p>最后，当然是在_config.xml的default_asides 中添加这个tag cloud到导航栏，例如：</p>

<p><div class="highlight"><pre><code class="ruby"><span class="n">default_asides</span><span class="p">:</span> <span class="o">[</span><span class="n">asides</span><span class="o">/</span><span class="n">category_list</span><span class="o">.</span><span class="n">html</span><span class="p">,</span> <span class="n">asides</span><span class="o">/</span><span class="n">recent_posts</span><span class="o">.</span><span class="n">html</span><span class="p">,</span> <span class="n">custom</span><span class="o">/</span><span class="n">asides</span><span class="o">/</span><span class="n">tags</span><span class="o">.</span><span class="n">html</span><span class="o">]</span>
</code></pre>
</div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为octopress添加分类(category)列表]]></title>
    <link href="http://codemacro.com/2012/07/18/add-category-list-to-octopress/"/>
    <updated>2012-07-18T16:10:00+08:00</updated>
    <id>http://codemacro.com/2012/07/18/add-category-list-to-octopress</id>
    <content type="html"><![CDATA[<p>参考<a href="http://paz.am/blog/blog/2012/06/25/octopress-category-list-plugin/">http://paz.am/blog/blog/2012/06/25/octopress-category-list-plugin/</a>。大致步骤为：</p>

<p><strong>增加category_list插件</strong></p>

<p>保存以下代码到plugins/category_list_tag.rb：</p>

<p><div class="highlight"><pre><code class="ruby"><span class="k">module</span> <span class="nn">Jekyll</span>
  <span class="k">class</span> <span class="nc">CategoryListTag</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="no">Liquid</span><span class="o">::</span><span class="no">Tag</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>

<span class="sr">&lt;pre&gt;&lt;code&gt;def render(context)</span>
<span class="sr">  html = &quot;&quot;</span>
<span class="sr">  categories = context.registers[:site].categories.keys</span>
<span class="sr">  categories.sort.each do |category|</span>
<span class="sr">    posts_in_category = context.registers[:site].categories[category].size</span>
<span class="sr">    category_dir = context.registers[:site].config[&#39;category_dir&#39;]</span>
<span class="sr">    category_url = File.join(category_dir, category.gsub(/</span><span class="n">_</span><span class="o">|</span><span class="p">\</span><span class="n">P</span><span class="p">{</span><span class="no">Word</span><span class="p">}</span><span class="o">/</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/-{2,}/</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">downcase</span><span class="p">)</span>
    <span class="n">html</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="s2">&quot;&amp;lt;li class=&#39;category&#39;&amp;gt;&amp;lt;a href=&#39;http://codemacro.com/</span><span class="si">#{</span><span class="n">category_url</span><span class="si">}</span><span class="s2">/&#39;&amp;gt;</span><span class="si">#{</span><span class="n">category</span><span class="si">}</span><span class="s2"> (</span><span class="si">#{</span><span class="n">posts_in_category</span><span class="si">}</span><span class="s2">)&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;</span><span class="se">\n</span><span class="s2">&quot;</span>
  <span class="k">end</span>
  <span class="n">html</span>
<span class="k">end</span>
<span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
<span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>

<span class="sr">&lt;p&gt;Liquid::Template.register_tag(&#39;category_list&#39;, Jekyll::CategoryListTag)</span>
</code></pre>
</div>
</p>

<p>这个插件会向liquid注册一个名为category_list的tag，该tag就是以li的形式将站点所有的category组织起来。如果要将category加入到侧边导航栏，需要增加一个aside。</p>

<!-- more -->


<p><strong>增加aside</strong></p>

<p>复制以下代码到source/_includes/asides/category_list.html。</p>

<p><div class="highlight"><pre><code class="ruby"><span class="o">&lt;</span><span class="n">section</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Categories</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
<span class="sr">  &lt;ul id=&quot;categories&quot;&gt;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">{</span><span class="o">%</span> <span class="n">category_list</span> <span class="o">%</span><span class="p">}</span>
<span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="sr">/ul&gt;</span>
<span class="sr">&lt;/se</span><span class="n">ction</span><span class="o">&gt;</span>
</code></pre>
</div>
</p>

<p>配置侧边栏需要修改_config.yml文件，修改其default_asides项：</p>

<p><div class="highlight"><pre><code class="ruby"><span class="n">default_asides</span><span class="p">:</span> <span class="o">[</span><span class="n">asides</span><span class="o">/</span><span class="n">category_list</span><span class="o">.</span><span class="n">html</span><span class="p">,</span> <span class="n">asides</span><span class="o">/</span><span class="n">recent_posts</span><span class="o">.</span><span class="n">html</span><span class="o">]</span>
</code></pre>
</div>
</p>

<p>以上asides根据自己的需求调整。</p>
]]></content>
  </entry>
  
</feed>
