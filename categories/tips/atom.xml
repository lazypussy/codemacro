<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tips | loop in codes]]></title>
  <link href="http://codemacro.com/categories/tips/atom.xml" rel="self"/>
  <link href="http://codemacro.com/"/>
  <updated>2012-07-24T16:34:43+08:00</updated>
  <id>http://codemacro.com/</id>
  <author>
    <name><![CDATA[Kevin Lynx]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HTML中table的高亮以及tooltip]]></title>
    <link href="http://codemacro.com/2012/07/24/html-table-hover/"/>
    <updated>2012-07-24T16:08:00+08:00</updated>
    <id>http://codemacro.com/2012/07/24/html-table-hover</id>
    <content type="html"><![CDATA[<p>在一个需要显示很多数据的表格(table)中，为了更友好地查看一行数据，常常需要在鼠标指针移到某一行时，高亮此行。要实现这个效果有很多方法，这里列举一个方法：</p>

<p><div class="highlight"><pre><code class="javascript"><span class="kd">function</span> <span class="nx">setTableHover</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">$</span><span class="p">(</span><span class="nx">t</span> <span class="o">+</span> <span class="s2">&quot; tbody tr&quot;</span><span class="p">)</span><span class="o">&lt;</span><span class="err">/p&gt;</span>

<span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span>  <span class="p">.</span><span class="nx">mouseover</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;hover&quot;</span><span class="p">);})</span>
  <span class="p">.</span><span class="nx">mouseout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;hover&quot;</span><span class="p">);</span> <span class="p">})</span>
<span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>

<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span>
</code></pre>
</div>
</p>

<p>主要就是在鼠标移到某一行时，为该行添加一个高亮的css class，鼠标离开时移除该class即可。可以为一个特定的table设定：</p>

<!-- more -->


<p><div class="highlight"><pre><code class="html"><span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;table</span> <span class="na">id=</span><span class="s">&quot;test&quot;</span><span class="nt">&gt;</span>
<span class="nt">&lt;/table&gt;</span>


<span class="nt">&lt;script&gt;</span>
    <span class="nx">setTableHover</span><span class="p">(</span><span class="s1">&#39;#test&#39;</span><span class="p">)</span>
<span class="nt">&lt;/script&gt;</span>


<span class="nt">&lt;p&gt;</span>
</code></pre>
</div>
</p>

<p>甚至可以为将某个页面的所有table设为高亮：</p>

<p><div class="highlight"><pre><code class="html"><span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;script&gt;</span>
    <span class="nx">setTableHover</span><span class="p">(</span><span class="s1">&#39;table&#39;</span><span class="p">)</span>
<span class="nt">&lt;/script&gt;</span>


<span class="nt">&lt;p&gt;</span>
</code></pre>
</div>
</p>

<p>css里需要编写这个hover：</p>

<p><div class="highlight"><pre><code class="css"><span class="nc">.hover</span> <span class="p">{</span>
  <span class="k">background</span><span class="o">:</span> <span class="m">#e9cffa</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
</div>
</p>

<hr/>


<p>除了高亮显示某一行外，可能还需要在鼠标移动到某个单元格时，弹出一个tooltip。这里的tooltip可以是<a href="http://codemacro.com/2012/07/19/popup-window-in-html/">弹出窗口</a>，也就是一个div元素。</p>

<p><div class="highlight"><pre><code class="html"><span class="nt">&lt;tr&gt;</span>
  <span class="nt">&lt;td</span> <span class="na">class=</span><span class="s">&quot;tip&quot;</span><span class="nt">&gt;&lt;/p&gt;</span>

<span class="nt">&lt;pre&gt;&lt;code&gt;</span>hello
<span class="ni">&amp;lt;</span>div class=&#39;popup&#39; style=&#39;display:none;&#39;<span class="ni">&amp;gt;</span>this is the tip<span class="ni">&amp;lt;</span>/div<span class="ni">&amp;gt;</span>
<span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>

<span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/td&gt;</span>
<span class="nt">&lt;/tr&gt;</span>
</code></pre>
</div>
</p>

<p>要实现此效果，可以通过修改包含tip class的鼠标事件响应：</p>

<p><div class="highlight"><pre><code class="javascript"><span class="nx">$</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>

<span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.tip&#39;</span><span class="p">).</span><span class="nx">hover</span><span class="p">(</span>
    <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
        <span class="nx">show_popupex</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">));</span>
    <span class="p">},</span>
    <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
        <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">).</span><span class="nx">hide</span><span class="p">();</span>
    <span class="p">}</span>
    <span class="p">);</span>
<span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>

<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">});</span>
</code></pre>
</div>
</p>

<p>hover的第一个参数表示鼠标进入的响应，第二个参数表示鼠标离开的响应。show_popupex用于将一个元素以绝对位置显示在指定元素（这里是单元格）附近，可以参看<a href="http://codemacro.com/2012/07/19/popup-window-in-html/">弹出窗口</a>那篇文章。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails中获取客户端时区]]></title>
    <link href="http://codemacro.com/2012/07/20/get-client-timezone-in-rails/"/>
    <updated>2012-07-20T16:42:00+08:00</updated>
    <id>http://codemacro.com/2012/07/20/get-client-timezone-in-rails</id>
    <content type="html"><![CDATA[<p>开发网站功能时，有时候需要获取客户端（浏览器）所在的时区，然后根据不同的时区做一些不同的逻辑功能。这里提供一种方法，其思路为客户端通过js获取时区，然后发送给服务器，服务器存储时区到session中。</p>

<p><div class="highlight"><pre><code class="javascript"><span class="kd">function</span> <span class="nx">submit_timezone</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">$</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;offset_min&#39;</span> <span class="o">:</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span> <span class="o">*</span> <span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">()).</span><span class="nx">getTimezoneOffset</span><span class="p">())});</span>
<span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>

<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>

<span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">submit_timezone</span><span class="p">(</span><span class="s1">&#39;&amp;lt;%= sys_timezone_path %&amp;gt;&#39;</span><span class="p">);</span>
<span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>

<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">});</span>
</code></pre>
</div>
</p>

<!-- more -->


<p>sys_timezone_path是一个特地用来处理时区的route。其实主要需要的是offset_min这个请求参数，你可以把这个参数附加到其他请求里。</p>

<p>然后根据offset_min获取到时区名：</p>

<p><div class="highlight"><pre><code class="ruby"><span class="k">def</span> <span class="nf">timezone</span>
  <span class="n">offset_sec</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:offset_min</span><span class="o">].</span><span class="n">to_i</span> <span class="o">*</span> <span class="mi">60</span>
  <span class="n">zone</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">TimeZone</span><span class="o">[</span><span class="n">offset_sec</span><span class="o">]</span>
  <span class="n">zone</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">TimeZone</span><span class="o">[</span><span class="s2">&quot;UTC&quot;</span><span class="o">]</span> <span class="k">unless</span> <span class="n">zone</span>
  <span class="n">session</span><span class="o">[</span><span class="ss">:zone_name</span><span class="o">]</span> <span class="o">=</span> <span class="n">zone</span><span class="o">.</span><span class="n">name</span> <span class="k">if</span> <span class="n">zone</span>
  <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|&lt;</span><span class="sr">/p&gt;</span>

<span class="sr">&lt;pre&gt;&lt;code&gt;format.js</span>
<span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>

<span class="sr">&lt;p&gt;  end</span>
<span class="sr">end</span>
</code></pre>
</div>
</p>

<p>以上，获取到时区名后存储到session[:zone_name]里。在之后处理这个客户端的请求时，就可以通过这个时区名取得对应的时区，例如：</p>

<p><div class="highlight"><pre><code class="ruby"><span class="n">zone_name</span> <span class="o">=</span> <span class="n">session</span><span class="o">[</span><span class="ss">:zone_name</span><span class="o">]</span>
<span class="n">zone</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">TimeZone</span><span class="o">[</span><span class="n">zone_name</span><span class="o">]</span> <span class="k">if</span> <span class="n">zone_name</span>
</code></pre>
</div>
</p>

<p>但经过我实际测试，部署在heroku上的应用偶尔会发现session[:zone_name]取出来是nil，尽管我确认了timezone函数是被调用过的。这难道跟session的超时有关？后来我只好将timezone name写到客户端页面中，然后在其他请求中再把这个时区名发回来。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTML中实现弹出窗口]]></title>
    <link href="http://codemacro.com/2012/07/19/popup-window-in-html/"/>
    <updated>2012-07-19T14:56:00+08:00</updated>
    <id>http://codemacro.com/2012/07/19/popup-window-in-html</id>
    <content type="html"><![CDATA[<p><img class="right" src="/assets/res/popup-window-tip.png"></p>

<p>做网页时弹出一个窗口显示一些内容是一种很常见的交互方式，如图中用户点击“个人资料“时并不是转到一个新页面，而是在当前页面弹出修改密码的窗口。弹出窗口的实现方式有很多，这里罗列一种。</p>

<p>弹出窗口的内容是作为一个单独的div存在的，这个div可以在页面刚开始载入时不填入内容，而在以后通过json或者直接返回js来填入。其次，弹出窗口的显示位置一般是绝对位置，一方面是不影响页面布局，另一方面也希望其作为一个顶层窗口来呈现，所以需要指定其position css。</p>

<!-- more -->


<p><div class="highlight"><pre><code class="html"><span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&#39;userprofile&#39;</span> <span class="na">class=</span><span class="s">&#39;popup&#39;</span> <span class="na">style=</span><span class="s">&quot;display:none;&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>


<span class="nt">&lt;p&gt;</span>
</code></pre>
</div>
</p>

<p><div class="highlight"><pre><code class="css"><span class="nc">.popup</span> <span class="p">{</span>
  <span class="k">position</span><span class="o">:</span> <span class="k">absolute</span><span class="p">;</span>
  <span class="k">z-index</span><span class="o">:</span> <span class="m">200</span><span class="p">;</span>
  <span class="k">left</span><span class="o">:</span> <span class="m">0px</span><span class="p">;</span>
  <span class="k">top</span><span class="o">:</span> <span class="m">0px</span><span class="p">;</span>
  <span class="k">border</span><span class="o">:</span> <span class="m">1px</span> <span class="k">solid</span> <span class="m">#666</span><span class="p">;</span>
  <span class="k">background</span><span class="o">:</span> <span class="nb">white</span><span class="p">;</span>
  <span class="k">padding</span><span class="o">:</span> <span class="m">8px</span> <span class="m">5px</span> <span class="m">5px</span><span class="p">;</span>
  <span class="k">margin</span><span class="o">:</span> <span class="m">10px</span> <span class="m">5px</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
</div>
</p>

<p>我这里div里的内容是后面填入的，预先填入也可以。当要显示时，就通过js将这个div显示即可。为此我封装了几个js函数。</p>

<p><div class="highlight"><pre><code class="javascript"><span class="kd">function</span> <span class="nx">show_popupex</span><span class="p">(</span><span class="nx">pannel</span><span class="p">,</span> <span class="nx">target</span><span class="p">,</span> <span class="nx">manual</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>

<span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="kd">var</span> <span class="nx">pos</span> <span class="o">=</span> <span class="nx">target</span><span class="p">.</span><span class="nx">position</span><span class="p">();</span>
<span class="kd">var</span> <span class="nx">height</span> <span class="o">=</span> <span class="nx">target</span><span class="p">.</span><span class="nx">outerHeight</span><span class="p">();</span>
<span class="nx">pannel</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;left&#39;</span><span class="p">,</span> <span class="nx">pos</span><span class="p">.</span><span class="nx">left</span> <span class="o">+</span> <span class="s1">&#39;px&#39;</span><span class="p">);</span>
<span class="nx">pannel</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;top&#39;</span><span class="p">,</span> <span class="nx">pos</span><span class="p">.</span><span class="nx">top</span> <span class="o">+</span> <span class="nx">height</span> <span class="o">+</span> <span class="s1">&#39;px&#39;</span><span class="p">);</span>
<span class="nx">pannel</span><span class="p">.</span><span class="nx">show</span><span class="p">();</span>
<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">manual</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">pannel</span><span class="p">.</span><span class="nx">mouseleave</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span> <span class="nx">pannel</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span> <span class="p">});</span>
<span class="p">}</span>
<span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>

<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>

<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kd">function</span> <span class="nx">show_popup</span><span class="p">(</span><span class="nx">pannel_id</span><span class="p">,</span> <span class="nx">target_id</span><span class="p">,</span> <span class="nx">manual</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>

<span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="kd">var</span> <span class="nx">target</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nx">target_id</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">pannel</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nx">pannel_id</span><span class="p">);</span>
<span class="nx">show_popupex</span><span class="p">(</span><span class="nx">pannel</span><span class="p">,</span> <span class="nx">target</span><span class="p">,</span> <span class="nx">manual</span><span class="p">);</span>
<span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>

<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>

<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kd">function</span> <span class="nx">hide_popup</span><span class="p">(</span><span class="nx">pannel_id</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>

<span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">$</span><span class="p">(</span><span class="nx">pannel_id</span><span class="p">).</span><span class="nx">hide</span><span class="p">();</span>
<span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>

<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span>
</code></pre>
</div>
</p>

<p>show_popup函数主要就是将目标元素的位置做调整，然后显示。通常情况下我只需传入元素的id，manual属性指定弹出窗口是否手动关闭。对于tooltip的实现，则需要让其自动关闭。针对以上例子，使用方式为：</p>

<p><div class="highlight"><pre><code class="js"><span class="nx">show_popup</span><span class="p">(</span><span class="s1">&#39;#userprofile&#39;</span><span class="p">,</span> <span class="s1">&#39;#profile-link&#39;</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
</code></pre>
</div>
</p>

<p>其中profile-link就是那个“个人资料“链接。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开始记录编程方面的技巧]]></title>
    <link href="http://codemacro.com/2012/07/18/start-to-write-tips/"/>
    <updated>2012-07-18T17:01:00+08:00</updated>
    <id>http://codemacro.com/2012/07/18/start-to-write-tips</id>
    <content type="html"><![CDATA[<p>回首上篇博客的发表时间，又2个月时间过去了。在我博客生涯的过去两三年里，总会有好几个月的时间没有编写任何文章。我觉得这真是一个不好的习惯。这个情况的产生，有很多原因。例如自己太懒、工作偶尔忙、自己偶尔处于混沌时期、自己偶尔怀疑人生，如是种种。但最大的原因还是，不敢写。</p>

<p>在刚出来工作那会，作为一个懵懂的青年，接触个什么新技术都内心激动骄傲，然后就特别有动力将所学记录下来，注意下言辞还能折腾个像那么回事的教程出来。后来慢慢地，我就觉得，这些东西太肤浅。先别说教人用个什么IDE，配置个什么数据库，就算你是学个新语言，好好研究下TCP，甚至还能折腾个IOCP框架，这些都还是他妈的特肤浅。你说任何一个有那么点经验和学习能力的程序员，谁花点时间整不出来这些？谁他妈要你在这里装逼卖萌，甚至贻笑大方。除此之外，我个人也觉得无聊了。</p>

<p>另一方面我觉得写博客还有个好处就是帮助自己记录技术，以便将来万一又需要曾经学习过的技术了，回头温习一下就好。但是后来慢慢地我又觉得，这也是没必要的事情。因为反正需要这个技术的时候，也花不了多少时间。</p>

<p>基于这些乱七八糟的原因，我虽然经常打开自己的博客，看看有没人评论啊，留言啊，但发表博客的频率始终上不去。</p>

<!-- more -->


<p>后来呢，在google reader上断断续续也看了些别的程序员的故事。例如有傻逼坚持1年每天一篇博客，后来竟然写了本书；例如有傻逼坚持每天翻译一篇英文文章。我琢磨着这些人该有多么大的毅力啊，就算是翻译文章，这从找文章筛选文章到最好发表出来这尼玛又该睡觉了啊亲。心生佩服之余，我觉得自己应该向这些傻逼们学习。作为一个已经没有那么多青年时光的青年，试想以后每天下班回家带娃的日子，而曾经竟碌碌无为地磨过每一个工作日耍过每一个工作日晚上，这是件比带娃更悲剧的事情。</p>

<p>所以，我也决定坚持干一件虽一日不用一次但也望每周那么几次的事情。我决定在博客上记录一些编程方面的技巧(tips)，集中于某个小问题的解决、某个小功能的实现。这些技巧相比前文说的，就更肤浅了，肤浅到你一google出来的结果你都吓一跳的程度。但是我依然觉得这是有用的，就像我用rails做网站，每一个小功能我都得google一遍，然后积累于心，然后一段时间后忘掉。为了不忘掉，为了查阅起来简单，我决定记录下来。但是仅靠我自己的经验，是肯定无法做到频繁地更新的，所以，我决定上stackoverflow上随机找些问题/答案翻译出来。stackoverflow非常适合满足这种需求，我发现我google某个rails技巧时，基本是从stackoverflow上获取下来的。</p>

<p>这样，我的博客<a href="http://codemacro.com">http://codemacro.com</a>的rss输出可能会繁杂点，这对于某些人而言估计会起到恶心的效果。而我自己的博客可能也会变得不那么像个人博客。我也想过单独做个网站出来，但仔细想想还是制止自己少瞎折腾了。如有建议欢迎批评。</p>

<p>好，就这样，没了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为octopress添加tag cloud]]></title>
    <link href="http://codemacro.com/2012/07/18/add-tag-to-octopress/"/>
    <updated>2012-07-18T16:37:00+08:00</updated>
    <id>http://codemacro.com/2012/07/18/add-tag-to-octopress</id>
    <content type="html"><![CDATA[<p>同添加category list一样，网络上有很多方法，这里列举一种。首先到<a href="https://github.com/robbyedwards/octopress-tag-pages">https://github.com/robbyedwards/octopress-tag-pages</a>和<a href="https://github.com/robbyedwards/octopress-tag-cloud">https://github.com/robbyedwards/octopress-tag-cloud</a>clone这两个项目的代码。这两个项目分别用于产生tag page和tag cloud。 针对这两个插件，需要手工复制一些文件到你的octopress目录。</p>

<p><strong>octopress-tag-pages</strong></p>

<p>复制tag_generator.rb到/plugins目录；复制tag_index.html到/source/_layouts目录。<strong>需要注意的是，还需要复制tag_feed.xml到/source/_includes/custom/目录。</strong>这个官方文档里没提到，在我机器上rake generate时报错。其他文件就不需要复制了，都是些例子。</p>

<!-- more -->


<p><strong>octopress-tag-cloud</strong></p>

<p>仅复制tag_cloud.rb到/plugins目录即可。但这仅仅只是为liquid添加了一个tag（非本文所提tag）。如果要在侧边导航里添加一个tag cloud，我们还需要手动添加aside。</p>

<p>复制以下代码到/source/_includes/custom/asides/tags.html。</p>

<p><div class="highlight"><pre><code class="ruby"><span class="o">&lt;</span><span class="n">section</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Tags</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
<span class="sr">  &lt;ul class=&quot;tag-cloud&quot;&gt;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">{</span><span class="o">%</span> <span class="n">tag_cloud</span> <span class="n">font</span><span class="o">-</span><span class="n">size</span><span class="p">:</span> <span class="mi">90</span><span class="o">-</span><span class="mi">210</span><span class="sx">%, limit: 10,</span> <span class="n">style</span><span class="p">:</span> <span class="n">para</span> <span class="o">%</span><span class="p">}</span>
<span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="sr">/ul&gt;</span>
<span class="sr">&lt;/se</span><span class="n">ction</span><span class="o">&gt;</span>
</code></pre>
</div>
</p>

<p>tag_cloud的参数中，style :para指定不使用li来分割，limit限定10个tag，font-size指定tag的大小范围，具体参数参看官方文档。</p>

<p>最后，当然是在_config.xml的default_asides 中添加这个tag cloud到导航栏，例如：</p>

<p><div class="highlight"><pre><code class="ruby"><span class="n">default_asides</span><span class="p">:</span> <span class="o">[</span><span class="n">asides</span><span class="o">/</span><span class="n">category_list</span><span class="o">.</span><span class="n">html</span><span class="p">,</span> <span class="n">asides</span><span class="o">/</span><span class="n">recent_posts</span><span class="o">.</span><span class="n">html</span><span class="p">,</span> <span class="n">custom</span><span class="o">/</span><span class="n">asides</span><span class="o">/</span><span class="n">tags</span><span class="o">.</span><span class="n">html</span><span class="o">]</span>
</code></pre>
</div>
</p>
]]></content>
  </entry>
  
</feed>
